{
  "targetActorSelection": "/system/sharding/connection",
  "headers": {
    "aggregate": false
  },
  "piggybackCommand": {
    "type": "connectivity.commands:createConnection",
    "connection": {
      "id": "data-connection-source",
      "connectionType": "mqtt",
      "connectionStatus": "open",
      "failoverEnabled": true,
      "validateCertificates": true,
      "uri": "ssl://192.168.0.174:8883",
      "ca": "-----BEGIN CERTIFICATE-----\nMIIDhzCCAm+gAwIBAgIUcwdOy8T8Dpr53oXl4U6idC2NUPowDQYJKoZIhvcNAQEL BQAwcDELMAkGA1UEBhMCREUxDzANBgNVBAgMBkJyZW1lbjEPMA0GA1UEBwwGYnJl bWVuMQ8wDQYDVQQKDAZUaGVzaXMxDjAMBgNVBAMMBW1haGRpMR4wHAYJKoZIhvcN AQkBFg9tYWhkaUBnbWFpbC5jb20wHhcNMjMwODE2MTYzMDI4WhcNMjQwODEwMTYz MDI4WjB2MQswCQYDVQQGEwJEZTEPMA0GA1UECAwGYnJlbWVuMQ8wDQYDVQQHDAZi cmVtZW4xDjAMBgNVBAoMBWRpdHRvMRYwFAYDVQQDDA0xOTIuMTY4LjAuMTc0MR0w GwYJKoZIhvcNAQkBFg50ZXN0QGdtYWlsLmNvbTCCASIwDQYJKoZIhvcNAQEBBQAD ggEPADCCAQoCggEBALw4wvFZ0X/+SvK8Orpcu6WjO13q4jGuPKCI1qRQ2nvujcf4 If0X7WPmqfqG0HpmTu7i1V0T2LI4B6UGpHgkjTPJRTSnIC9irOau9Gm6zc8hB+j/ gAHY6kEet96Os0xA9/4Otcm2YuUw76Xq6aOFo2Rqhgz8VRy1hiC+nuQt6+YgrHnF 05b0unzHE7CJEmHboRuj1zwo5qqGpctw4C8CipRk4jo1gQeOKveBzy2baq00lCcq nLctcoyg6hBBpT/I2HDXH+MPVPqSgF2gLT5cKrhlTOJGWfMj7CT2bAN+W53mCWSq mK+ohFTzCn2OzWVcK6QBbXx+TjRilJdi8Uy7LFsCAwEAAaMTMBEwDwYDVR0RBAgw BocEwKgArjANBgkqhkiG9w0BAQsFAAOCAQEA0F6oYXx2v7GL6SjjlhHx34VaCu2l ikZyg49nimfMhU6JWNFhbHfMSmCLMfBXIcN/uDFVOb7U8qB6MHHaCWetvY3MfwAA jRfRcwxiA72BSMrJEAxZFd0Z5lu3dsBCni4HVFgGl2+sYDiuaS23lS1RlNtEVOKn H1ojuDqte5e2w+gY9hlnymP41P7WGRW3YZc0nTvJj1wUD4PMnCYqueKSyFj8rqJN ugOoQM1OsHNgJGRTlG/ZI09D+q2OmI6b8LisMuMwtBND48tClhmiEN1BSBAEbHCH 4Cjtmo1nocLi3pIYqodMAXC621k2nVjLxt53qYxt2kdpSyXXdywNMj5E+g==\n-----END CERTIFICATE-----",
      "sources": [
        {
          "addresses": [
            "datatopic"
          ],
          "authorizationContext": [
            "nginx:ditto"
          ],
          "qos": 0,
          "filters": []
        }
      ],
      "mappingContext": {
        "mappingEngine": "JavaScript",
        "options": {
          "incomingScript": "function mapToDittoProtocolMsg(headers, textPayload, bytePayload, contentType) {\n    const jsonString = String.fromCharCode.apply(null, new Uint8Array(bytePayload));\n    const jsonData = JSON.parse(jsonString);\n    const thingId = jsonData.thingId.split(':');\n    const value = {\n        measurements: {\n            properties: {\n                temperature: jsonData.temperature,\n                humidity: jsonData.humidity\n            }\n        }\n    };\n    return Ditto.buildDittoProtocolMsg(thingId[0], thingId[1], 'things', 'twin', 'commands', 'modify', '/features', headers, value);\n}",
          "outgoingScript": "function mapFromDittoProtocolMsg(namespace, id, group, channel, criterion, action, path, dittoHeaders, value, status, extra) {\n    return null;\n}",
          "loadBytebufferJS": "false",
          "loadLongJS": "false"
        }
      }
    }
  }
}

